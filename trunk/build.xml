<!-- $Id: build.xml,v 1.1.1.1 2005-06-07 14:10:34 hp Exp $ -->
<!-- This build file based on the OpenNLP build.xml file. -->

<project name="JMorph" default="package" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp/>
    <property name="Name" value="jmorph"/>
    <property name="name" value="jmorph"/>
    <property name="version" value="1.0"/>
    <property name="year" value="2005"/>

    <echo message="----------- ${Name} ${version} [${year}] ------------"/>

    <property name="build.compiler" value="modern"/>
    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="on"/>

    <property name="src.dir" value="./src/java"/>
    <!--property name="src.webapp" value="./src/webapp"/>
    <property name="lib.dir" value="./lib"/-->
    <property name="packages" value="net.sf.jhunglang.*"/>

    <property name="build.dir" value="./output"/>
    <property name="build.dest" value="${build.dir}/classes"/>
    <property name="build.webapp" value="${build.dir}/webapp"/>
    <property name="build.javadocs" value="./docs/api"/>

    <property name="dist.root" value="./dist"/>
    <property name="dist.dir" value="${dist.root}/${name}-${version}"/>

    <property name="package.dir" value="./package"/>

    <filter token="year" value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date" value="${TODAY}"/>
    <filter token="log" value="true"/>
    <filter token="verbose" value="true"/>

    <path id="build.classpath">
    	<!-- modifications to remove named jars -->
   		<!--fileset dir="lib/">
			<include name="*.jar"/>
		</fileset-->	
    	<!--
      <pathelement location="${lib.dir}/maxent-2.2.0.jar"/>
      <pathelement location="${lib.dir}/trove.jar"/>
      -->
    </path>


  </target>

	
  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="JMorph build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   package  --> generates the jmorph.jar file (default)"/>
    <echo message="   compile  --> compiles the source code"/>
    <echo message="   javadoc  --> generates the API documentation"/>
    <echo message="   clean    --> cleans up the directory"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>

 <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the source code                                            -->
  <!-- =================================================================== -->
   <target name="prepare-src" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.dest}"/>
  </target>


  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare-src">
    <javac srcdir="${src.dir}"
           destdir="${build.dest}"
           debug="${debug}"
           classpathref="build.classpath"
           optimize="${optimize}"/>
  </target>


  <!-- =================================================================== -->
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
  <target name="package" depends="compile">
    <jar jarfile="${build.dir}/${name}-${version}.jar"
         basedir="${build.dest}" />
  </target>

	 <!-- =================================================================== -->
	  <!-- Creates webapp directory                                           -->
	  <!-- =================================================================== -->
	  <target name="webapp" depends="package">
	  	<mkdir dir="${build.webapp}"/>
	  	<copy todir="${build.webapp}">
	  		  	      <fileset dir="${src.webapp}">
	  		  	       
	  		  	      </fileset>
	      </copy>
	  	 <copy todir="${build.webapp}/WEB-INF/lib">
	  	      <fileset dir="${lib.dir}">
	  	        <include name="*.jar"/>
	  	      </fileset>
	  	 </copy>
	  	<copy todir="${build.webapp}/WEB-INF/lib">
	  		  <fileset dir="${build.dir}">
	  	        <include name="*.jar"/>
	  		  </fileset>
	  </copy>
	  </target>

  <!-- =================================================================== -->
  <!-- Creates Jar file with all other needed jars built in.               -->
  <!-- =================================================================== -->
  <target name="exe" depends="package">
    <jlink outfile="${build.dir}/${name}-exe-${version}.jar">
      <mergefiles>
        <pathelement path="${build.dir}/${name}-${version}.jar"/>
	<!-- no other files are needed
	     these jars are related to JDOM 
	<pathelement path="lib/gnu-regexp.jar"/>
	<pathelement path="lib/jdom.jar"/>
	<pathelement path="lib/xerces.jar"/>
        -->
      </mergefiles>
      <addfiles>
        <pathelement path="META-INF"/>
      </addfiles>
    </jlink>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the release file                                           -->
  <!-- =================================================================== -->
  <target name="release" depends="clean">
    <tar tarfile="${name}-${version}-src.tar"
         basedir="../"
	 includes="jmorph/**" >
      <exclude name="jmorph/docs/api/**"/>
      <exclude name="**/CVS"/>
    </tar>
    <gzip src="${name}-${version}-src.tar" 
          zipfile="../${name}-${version}-src.tgz" />
    <delete file="${name}-${version}-src.tar" />
  </target>


  <!-- =================================================================== -->
  <!-- Creates the homepage                                                -->
  <!-- =================================================================== -->
  <target name="homepage" depends="init,javadoc">
    <tar tarfile="${name}-homepage.tar"
         basedir="./docs/"
         includes="**"
         excludes="**/CVS" />
    <gzip src="${name}-homepage.tar"
          zipfile="${build.dir}/${name}-homepage.tgz" />
    <delete file="${name}-homepage.tar" />
  </target>


  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadoc" depends="prepare-src">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="${packages}"
             sourcepath="${src.dir}"
             destdir="${build.javadocs}"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="opennlp.common"
             doctitle="The ${Name} Common API v${version}"
             bottom="Copyright &#169; ${year} Gyorgy Gyepesi. All Rights Reserved."
    />
  </target>


  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
  </target>

  <target name="distclean" depends="clean">
    <deltree dir="${dist.root}"/>
    <delete file="${Name}-${version}.tar.gz"/>
    <delete file="${Name}-${version}.tar"/>
    <delete file="${Name}-${version}.zip"/>
  </target>

</project>

<!-- End of file -->
